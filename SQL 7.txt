show databases;
create database lecture;
use lecture;
drop database lecture;

show table;

select * from sql_skysports_project16875987300;
select * from sql_skysports_project16875987301;

rename table sql_skysports_project16875987300 to table300;
rename table sql_skysports_project16875987301 to table301;

select * from table300;
select * from table301;

# 2. Write an sql query to show all the UNIQUE team names 
SELECT DISTINCT team
FROM table300;


#3. Write an SQL query to show name of team which has rank 1 from group 7 
select * from table300 where `rank` = '1' and `group`= '7';

#4. Write an sql query to show count of all teams 
SELECT count(team)
FROM table300;
SELECT COUNT(*) AS team_count
FROM table300;

#5. Write an SQL query to show matches_played by each team
SELECT team, matches_played
FROM table300;


#6. Write an SQL query to show team, percent of wins with respect 
#to matches_played by each team and name the resulting column as wins_percent 
SELECT team, 
       (wins * 100.0 / matches_played) AS wins_percent
FROM table300;

#7. Write an SQL query to show which team has maximum goals_scored and their count
select team, max(goals_scored)as max_goals_scored,count(goals_scored) as count_goals_scored
from table300
group by team
order by max_goals_scored desc;

#8. Write an SQL query to show percent of draws with respect to matches_played round of to 2 digits by each team 
SELECT team, 
       ROUND((draws * 100.0 / matches_played), 2) AS draws_percent
FROM table300;

#9. Write an SQL query to show which team has minimum goals_scored and their count
SELECT team, goals_scored
FROM table300
WHERE goals_scored = (SELECT MIN(goals_scored) FROM table300);

#10. Write an SQL query to show percent of losses with respect to
#matches_played by each team in ascending order by losses and
#name the resulting column as losses_percent 
SELECT team, 
       ROUND((losses * 100.0 / matches_played), 2) AS losses_percent
FROM table300
ORDER BY losses_percent ASC;

#11. Write an SQL query to show the average goal_difference 
SELECT AVG(goal_difference) AS average_goal_difference
FROM table300;

#12. Write an SQL query to show name of the team where points are 0
SELECT team
FROM table300
WHERE points = 0; 


#13. Write a SQL query to show all data where expected_goal_scored is less than exp_goal_conceded 
select * from table300 where expected_goal_scored <exp_goal_conceded;
#14Write an SQL query to show data where exp_goal_difference is in between -0.5 and 0.5 
select * from table300 where exp_goal_difference between -0.5 and 0.5;

#15. Write an SQL query to show all data in ascending order by exp_goal_difference_per_90
select * from table300  order by exp_goal_difference_per_90;

# 16. Write an SQL query to show team which has maximum number of players_used
select team ,max(players_used ) from table301 group by team ;

#17. Write an SQL query to show each team name and avg_age in ascending order by avg_age
select team ,avg_age from table301 order by avg_age;


#18. Write an sql query to show average possession of teams 
select team ,avg(possession) from table301 group by team;

#19. Write a SQL query to show team which has played atleast 5 games 
select team,games from table301 where games>=5;


#20. Write an SQL query to show all data for which minutes is greater than 600 
select * from table301 where minutes > 600;

#21 Write an SQL query to show team, goals, assists in ascending order by goals 
select team,goals, assists from table301 order by goals;

#22 Write an SQL query to show team, pens_made, pens_att in descending order by pens_made
select team, pens_made,pens_att from table301 order by pens_made desc;

#23 Write an SQL query to show team, cards_yellow, cards_red where cards_red is equal to 1 in ascending order by cards_yellow
select team, cards_yellow, cards_red from table301 where cards_red = 1 order by cards_yellow asc ;

#24. Write an SQL query to show team, goals_per90, assists_per90, goals_assists_per90 in descending order by goals_assists_per90 
select team,goals_per90, assists_per90, goals_assists_per90 from table301 order by goals_assists_per90 desc;

#25. Write an SQL query to show team, goals_pens_per90, goals_assists_pens_per90 in ascending order by goals_assists_pens_per90 
select team, goals_pens_per90, goals_assists_pens_per90 from table301 order by goals_assists_per90 asc;

#26 Write an SQL query to show team, shots, shots_on_target,shots_on_target_pct where shots_on_target_pct is less than 30
#in ascending order by shots_on_target_pct 
select team , shots, shots_on_target,shots_on_target_pct from table301 where shots_on_target_pct<30 order by shots_on_target_pct asc;

#27 Write an SQL query to show team, shots_per90, shots_on_target_per90 for team Belgium 
select team, shots_per90, shots_on_target_per90 from table301 where team = 'Belgium';

#28 Write an SQL query to show team, goals_per_shot,goals_per_shot_on_target, average_shot_distance in descending 
#order by average_shot_distance 
select team, goals_per_shot,goals_per_shot_on_target,average_shot_distance from table301 order by average_shot_distance desc;

#29. Write an SQL query to show team, errors, touches for which errors is 0 and touches is less than 1500 
select team, errors, touches from table301 where errors=0 and touches <1500;

#30. Write an SQL query to show team, fouls which has maximum number of fouls
select team, fouls from table301 where fouls = max(fouls);
SELECT team, fouls
FROM table301
WHERE fouls = (SELECT MAX(fouls) FROM table301);

#31 Write an SQL query to show team, offisdes which has offsides less than 10 or greater than 20 
SELECT team, offsides
FROM table301
WHERE offsides <10 or offsides >20;

#32 Write an SQL query to show team, aerials_won, aerials_lost, aerials_won_pct in descending order by aerials_won_pct
SELECT team, aerials_won, aerials_lost, aerials_won_pct 
FROM table301
order by aerials_won_pct;

#33. Write an SQL query to show number of teams each group has!
SELECT `group`, COUNT(*) AS number_of_teams
FROM table300
group by `group`; 

#34. Write a SQL query to show team names group 6 has 
select `group`, team
FROM table300
where `group`=6;

#35. Write an SQL query to show Australia belongs to which group
select `group`, team
FROM table300
where team = 'Australia';

#36. Write an SQL query to show group, average wins by each group 
select `group`, avg(wins) as average_wins
FROM table300
group by `group`;

#37. Write an SQL query to show group, 
#maximum  expected_goal_scored by each group in ascending order by expected_goal_scored 
select `group` , max(expected_goal_scored) as max_exp_max_goal_scored
from table300
group by `group`
order by  max_exp_max_goal_scored asc; 

#38. Write an SQL query to show group, minimum exp_goal_conceded by each group in descending order by exp_goal_conceded
select `group` , min(expected_goal_scored) as min_exp_max_goal_scored
from table300
group by `group`
order by  min_exp_max_goal_scored desc ; 

#39. Write an SQL query to show group, average exp_goal_difference_per_90 for each group in ascending order
#by exp_goal_difference_per_90 
select `group` , avg(exp_goal_difference_per_90 ) as avg_exp_goal_difference_per_90 
from table300
group by `group`
order by  avg_exp_goal_difference_per_90 asc ; 

#40. Write an SQL query to show which team has equal number of goals_scored and goals_against 
SELECT team ,goals_scored,goals_against
FROM table300
WHERE goals_scored = goals_against;

#41. Write an SQL query to show which team has maximum players_used 
SELECT team ,max(players_used) as max_players_used
FROM table301
group by team;

#42. Write an SQL query to show team, players_used, avg_age, games, minutes where minutes lessthan 500 and greater than 200 

SELECT team ,players_used, avg_age, games, minutes
FROM table301
where minutes < 500 and minutes >200;

#43. Write an SQL query to show all data of group_stats in ascending order BY points
select * from table300
order by points;


#44. Write an SQL query to show ALL UNIQUE team in ascending order by team 
SELECT DISTINCT team
FROM table300
ORDER BY team ASC;

#45 Write an SQL query to show average avg_age of each group(team) and arrange it in descending order by avg_age. 
SELECT team, avg(avg_age) as average_age
FROM table301
group by team
ORDER BY average_age desc;

SELECT table300.group, avg(avg_age) AS average_fouls
FROM table300
JOIN table301 ON table300.team = table301.team
GROUP BY table300.group
ORDER by  average_fouls ASC;


#46 Write an SQL query to show sum of fouls for each group( team ) and arrange it in ascending order by fouls. 
SELECT team, sum(fouls) as sum_of_fouls
FROM table301
group by team
ORDER BY sum_of_fouls asc;

SELECT table300.group, sum(fouls) AS total_fouls
FROM table300
JOIN table301 ON table300.team = table301.team
GROUP BY table300.group
ORDER by  total_fouls ASC;


#47. Write an SQL query to show total number of games for each group ( team ) and arrange it in descending order by games. 
SELECT team, sum(games) as total_games
FROM table301
group by team
ORDER BY total_games desc;

SELECT table300.group, sum(games) AS total_games
FROM table300
JOIN table301 ON table300.team = table301.team
GROUP BY table300.group
ORDER by total_games ASC;


#48. Write an SQL query to show total number of players_used for  each (team) group and arrange it in ascending order by players_used. 
SELECT team, sum(players_used) as total_players_used
FROM table301
group by team
ORDER BY total_players_used asc ;

SELECT table300.group, sum(players_used) AS total_players_used
FROM table300
JOIN table301 ON table300.team = table301.team
GROUP BY table300.group
ORDER by total_players_used ASC;


#49. Write an SQL query to show total number of offsides for each
#group(team) and arrange it in ascending order by offsides. 
SELECT team, sum(offsides) as total_offsides
FROM table301
group by team
ORDER BY total_offsides asc;

SELECT table300.group, sum(table301.offsides) AS total_offsides
FROM table300
JOIN table301 ON table300.team = table301.team
GROUP BY table300.group
ORDER BY total_offsides ASC;


#50. Write an SQL query to show average passes_pct for each group
#and arrange it in descending order by passes_pct.
SELECT team, avg(passes_pct) as avg_passes_pct
FROM table301
group by team
ORDER BY avg_passes_pct desc;

SELECT table300.group, AVG(table301.passes_pct) AS avg_passes_pct
FROM table300
JOIN table301 ON table300.team = table301.team
GROUP BY table300.group
ORDER BY avg_passes_pct ASC;


#51. Write an SQL query to show average goals_per90 for each group
#and arrange it in ascending order by goals_per90. 
SELECT team, avg(goals_per90) as avg_goals_per90
FROM table301
group by team
ORDER BY avg_goals_per90 asc;

SELECT table300.group, AVG(table301.goals_per90) AS avg_goals_per90
FROM table300
JOIN table301 ON table300.team = table301.team
GROUP BY table300.group
ORDER BY avg_goals_per90 ASC;


















 

































